{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laptop\\\\Desktop\\\\performance\\\\my task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport { mockData } from './utils/mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    // We simulate a data fetch by setting the mockData after a short delay\n    const fetchData = setTimeout(() => {\n      setData(mockData);\n    }, 500);\n    return () => clearTimeout(fetchData);\n  }, []);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading dashboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Dashboard, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Dashboard","mockData","jsxDEV","_jsxDEV","App","_s","data","setData","fetchData","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Laptop/Desktop/performance/my task/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Dashboard from './components/Dashboard';\r\nimport { mockData } from './utils/mockData';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // We simulate a data fetch by setting the mockData after a short delay\r\n    const fetchData = setTimeout(() => {\r\n      setData(mockData); \r\n    }, 500); \r\n\r\n    return () => clearTimeout(fetchData);\r\n  }, []);\r\n\r\n  if (!data) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading dashboard...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Dashboard data={data} /> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjCF,OAAO,CAACN,QAAQ,CAAC;IACnB,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMS,YAAY,CAACF,SAAS,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,IAAI,EAAE;IACT,oBACEH,OAAA;MAAKQ,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBT,OAAA;QAAKQ,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvCb,OAAA;QAAAS,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAEV;EAEA,oBACEb,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBT,OAAA,CAACH,SAAS;MAACM,IAAI,EAAEA;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAACX,EAAA,CA1BQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}